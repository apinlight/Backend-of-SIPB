<?php

namespace App\Exports\Word;

use PhpOffice\PhpWord\PhpWord;
use PhpOffice\PhpWord\IOFactory;

class SummaryReportWord
{
    protected $data;
    protected $filters;
    protected $user;

    public function __construct(array $data, array $filters, $user)
    {
        $this->data = $data;
        $this->filters = $filters;
        $this->user = $user;
    }

    public function generate(): string
    {
        $phpWord = new PhpWord();
        
        // Define styles
        $phpWord->addFontStyle('title', ['bold' => true, 'size' => 16, 'color' => '2E74B5']);
        $phpWord->addFontStyle('heading', ['bold' => true, 'size' => 12]);
        $phpWord->addFontStyle('normal', ['size' => 11]);
        $phpWord->addTableStyle('reportTable', [
            'borderSize' => 6,
            'borderColor' => 'CCCCCC',
            'cellMargin' => 80,
            'alignment' => \PhpOffice\PhpWord\SimpleType\JcTable::CENTER,
        ]);

        $section = $phpWord->addSection(['marginTop' => 1000, 'marginBottom' => 1000]);
        
        // Header
        $section->addText('ðŸ“Š LAPORAN SUMMARY PENGAJUAN', 'title');
        $section->addText('Generated: '.now()->format('d F Y, H:i'), 'normal');
        $section->addTextBreak(1);

        // User & Filter info
        $section->addText('Export Information', 'heading');
        $infoTable = $section->addTable('reportTable');
        $infoTable->addRow();
        $infoTable->addCell(3000)->addText('Generated By', ['bold' => true]);
        $infoTable->addCell(5000)->addText($this->user->username ?? 'System');
        $infoTable->addRow();
        $infoTable->addCell(3000)->addText('Role', ['bold' => true]);
        $infoTable->addCell(5000)->addText($this->user->getRoleNames()->first() ?? 'Unknown');
        
        if (!empty($this->filters['period'])) {
            $infoTable->addRow();
            $infoTable->addCell(3000)->addText('Period', ['bold' => true]);
            $infoTable->addCell(5000)->addText($this->filters['period']);
        }
        if (!empty($this->filters['branch'])) {
            $infoTable->addRow();
            $infoTable->addCell(3000)->addText('Branch', ['bold' => true]);
            $infoTable->addCell(5000)->addText($this->filters['branch']);
        }
        
        $section->addTextBreak(1);

        // Summary data
        $section->addText('Summary Statistics', 'heading');
        $table = $section->addTable('reportTable');
        
        // Header row
        $table->addRow(500);
        $table->addCell(5000, ['bgColor' => '4472C4'])->addText('Metric', ['bold' => true, 'color' => 'FFFFFF']);
        $table->addCell(3000, ['bgColor' => '4472C4'])->addText('Value', ['bold' => true, 'color' => 'FFFFFF']);

        $entries = [
            ['Total Pengajuan', $this->data['total_pengajuan'] ?? 0],
            ['Total Disetujui', $this->data['total_disetujui'] ?? 0],
            ['Total Menunggu', $this->data['total_menunggu'] ?? 0],
            ['Total Ditolak', $this->data['total_ditolak'] ?? 0],
            ['Total Selesai', $this->data['total_selesai'] ?? 0],
            ['Total Nilai (Rp)', 'Rp '.number_format($this->data['total_nilai'] ?? 0, 0, ',', '.')],
        ];
        
        foreach ($entries as $i => [$metric, $value]) {
            $table->addRow();
            $bgColor = $i % 2 === 0 ? 'F2F2F2' : 'FFFFFF';
            $table->addCell(5000, ['bgColor' => $bgColor])->addText($metric, 'normal');
            $table->addCell(3000, ['bgColor' => $bgColor])->addText((string) $value, 'normal');
        }

        $section->addTextBreak(1);
        $section->addText('---', ['color' => 'CCCCCC']);
        $section->addText('Generated by SIPB System | '.now()->format('Y'), ['size' => 9, 'color' => '999999']);

        // Save to temp file
        $fileName = 'Summary_Report_'.now()->format('Y-m-d_H-i-s').'.docx';
        $tempPath = storage_path('app/temp');
        if (!is_dir($tempPath)) { @mkdir($tempPath, 0777, true); }
        $filePath = $tempPath.'/'.$fileName;
        
        $writer = IOFactory::createWriter($phpWord, 'Word2007');
        $writer->save($filePath);

        return $filePath;
    }

    public function getFileName(): string
    {
        return 'Summary_Report_'.now()->format('Y-m-d_H-i-s').'.docx';
    }
}
